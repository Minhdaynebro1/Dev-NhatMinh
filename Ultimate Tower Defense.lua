--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v78=v2(v0(v30,16));if v19 then local v89=v5(v78,v19);v19=nil;return v89;else return v78;end end end);local function v20(v31,v32,v33) if v33 then local v79=0 -0 ;local v80;while true do if (v79==0) then v80=(v31/(2^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + ((1328 -396) -(857 + 74)))) ;return v80-(v80%(569 -(367 + (1266 -(68 + 997))))) ;end end else local v81=(2197 -(226 + 1044)) -(214 + 713) ;local v82;while true do if (v81==((0 -0) + (117 -(32 + 85)))) then v82=(1 + 1)^(v32-(878 -(277 + 5 + 132 + 463))) ;return (((v31%(v82 + v82))>=v82) and (1638 -(1523 + 114))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + (4 -2) ;return (v36 * (472 -216)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 );v18=v18 + (7 -(3 + 0)) ;return (v40 * 16777216) + (v39 * (65886 -(87 + 263))) + (v38 * (436 -((164 -97) + 113))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 + 0 ;local v44=(v20(v42,3 -2 ,972 -(802 + 150) ) * ((5 -3)^(57 -25))) + v41 ;local v45=v20(v42,16 + 5 ,1028 -(915 + 82) );local v46=((v20(v42,90 -(488 -(44 + 386)) )==(1 + (1486 -(998 + 488)))) and  -(1 -0)) or (1188 -(1069 + 118)) ;if (v45==(0 -0)) then if (v44==(0 -0)) then return v46 * (0 + 0 + 0) ;else local v90=0 -(0 + 0) ;while true do if (v90==(0 + 0)) then v45=792 -(368 + 423) ;v43=0 -0 ;break;end end end elseif (v45==(2065 -(10 + 8))) then return ((v44==(0 -0)) and (v46 * ((443 -(416 + 26))/((772 -(201 + 571)) -0)))) or (v46 * NaN) ;end return v8(v46,v45-(440 + 583) ) * (v43 + (v44/((3 -1)^(490 -(145 + 293))))) ;end local function v25(v47) local v48=0;local v49;local v50;while true do if (v48==(1140 -(116 + 1022))) then v50={};for v91=4 -(888 -(261 + 624)) , #v49 do v50[v91]=v2(v1(v3(v49,v91,v91)));end v48=2 + 1 ;end if ((3 -2)==v48) then v49=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;v48=861 -(814 + 45) ;end if (v48==0) then v49=nil;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=1 + 0 ;end if (v48==(2 + (1 -0))) then return v6(v50);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 1700 -(1419 + 281) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v51~=(2 -0)) then else for v93= #"!",v23() do local v94=(function() return 74 -(71 + 3) ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v94==1) then while true do if (v95~=(1769 -(1749 + 20))) then else v96=(function() return v21();end)();if (v20(v96, #">", #"|")==(0 + 0)) then local v110=(function() return 0 -0 ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v110==(1323 -(1249 + 73))) then v113=(function() return nil;end)();v114=(function() return nil;end)();v110=(function() return 2 -0 ;end)();end if (v110==(1145 -(466 + 679))) then local v202=(function() return 241 -(187 + 54) ;end)();local v203=(function() return;end)();while true do if (v202~=(0 -0)) then else v203=(function() return 780 -(162 + 618) ;end)();while true do if (v203==(0 + 0)) then v111=(function() return 0;end)();v112=(function() return nil;end)();v203=(function() return 1 + 0 ;end)();end if (v203==(1 -0)) then v110=(function() return 1 -0 ;end)();break;end end break;end end end if (v110~=(1 + 1)) then else while true do if (v111== #"~") then local v230=(function() return 1636 -(1373 + 263) ;end)();local v231=(function() return;end)();while true do if (v230~=(1000 -(451 + 549))) then else v231=(function() return 0 + 0 ;end)();while true do if ((1 -0)~=v231) then else v111=(function() return 2;end)();break;end if (v231==(584 -(57 + 527))) then v114=(function() return {v22(),v22(),nil,nil};end)();if (v112==(0 -0)) then local v242=(function() return 0;end)();local v243=(function() return;end)();while true do if (v242~=0) then else v243=(function() return 1384 -(746 + 638) ;end)();while true do if ((0 + 0)==v243) then v114[ #"19("]=(function() return v22();end)();v114[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v112== #">") then v114[ #"-19"]=(function() return v23();end)();elseif (v112==(2 -0)) then v114[ #"19("]=(function() return v23() -((343 -(218 + 123))^(1443 -(41 + 1386))) ;end)();elseif (v112== #"19(") then local v250=(function() return 1581 -(1535 + 46) ;end)();local v251=(function() return;end)();while true do if (v250~=(0 + 0)) then else v251=(function() return 0 + 0 ;end)();while true do if (v251~=(0 + 0)) then else v114[ #"-19"]=(function() return v23() -((562 -(306 + 254))^(1 + 15)) ;end)();v114[ #"?id="]=(function() return v22();end)();break;end end break;end end end v231=(function() return 1 -0 ;end)();end end break;end end end if (v111~=(1469 -(899 + 568))) then else local v232=(function() return 166 -(122 + 44) ;end)();local v233=(function() return;end)();while true do if (v232~=(0 + 0)) then else v233=(function() return 0;end)();while true do if (v233~=(0 -0)) then else if (v20(v113, #"\\", #"{")~= #"]") then else v114[4 -2 ]=(function() return v57[v114[1 + 1 ]];end)();end if (v20(v113,2,605 -(268 + 335) )== #",") then v114[ #"xnx"]=(function() return v57[v114[ #"nil"]];end)();end v233=(function() return 1;end)();end if (v233==1) then v111=(function() return  #"19(";end)();break;end end break;end end end if (v111~= #"xxx") then else if (v20(v113, #"gha", #"-19")~= #"|") then else v114[ #".com"]=(function() return v57[v114[ #"?id="]];end)();end v52[v93]=(function() return v114;end)();break;end if (v111==(65 -(30 + 35))) then local v235=(function() return 290 -(60 + 230) ;end)();local v236=(function() return;end)();while true do if (v235==(1257 -(1043 + 214))) then v236=(function() return 572 -(426 + 146) ;end)();while true do if (v236~=(1213 -(323 + 889))) then else v111=(function() return  #"\\";end)();break;end if (v236==(0 -0)) then v112=(function() return v20(v96,1 + 1 , #"-19");end)();v113=(function() return v20(v96, #"?id=",586 -(361 + 219) );end)();v236=(function() return 1;end)();end end break;end end end end break;end end end break;end end break;end if (v94~=(320 -(53 + 267))) then else local v103=(function() return 1456 -(282 + 1174) ;end)();while true do if (v103~=0) then else v95=(function() return 811 -(569 + 242) ;end)();v96=(function() return nil;end)();v103=(function() return 414 -(15 + 398) ;end)();end if (v103~=(983 -(18 + 964))) then else v94=(function() return 1;end)();break;end end end end end for v97= #"|",v23() do v53[v97-#"]" ]=(function() return v28();end)();end return v55;end if (v51== #"<") then local v86=(function() return 0 -0 ;end)();local v87=(function() return;end)();while true do if (v86==(0 -0)) then v87=(function() return 0;end)();while true do if (v87~=(1 + 0)) then else for v105= #" ",v56 do local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==(1024 -(706 + 318))) then local v136=(function() return 1251 -(721 + 530) ;end)();while true do if ((1271 -(945 + 326))~=v136) then else v107=(function() return 0 -0 ;end)();v108=(function() return nil;end)();v136=(function() return 851 -(20 + 830) ;end)();end if (v136==(1 + 0)) then v106=(function() return 701 -(271 + 429) ;end)();break;end end end if (v106==(1 + 0)) then v109=(function() return nil;end)();while true do if (v107~=(0 + 0)) then else local v212=(function() return 1500 -(1408 + 92) ;end)();local v213=(function() return;end)();while true do if (v212==(0 + 0)) then v213=(function() return 738 -(542 + 196) ;end)();while true do if (v213~=(1086 -(461 + 625))) then else v108=(function() return v21();end)();v109=(function() return nil;end)();v213=(function() return 1289 -(993 + 295) ;end)();end if (v213==(1 + 0)) then v107=(function() return  #"]";end)();break;end end break;end end end if (v107== #"}") then if (v108== #"/") then v109=(function() return v21()~=(0 + 0) ;end)();elseif (v108==(1 + 1)) then v109=(function() return v24();end)();elseif (v108== #"91(") then v109=(function() return v25();end)();end v57[v105]=(function() return v109;end)();break;end end break;end end end v55[ #"xnx"]=(function() return v21();end)();v87=(function() return 2;end)();end if (v87==(1171 -(418 + 753))) then v56=(function() return v23();end)();v57=(function() return {};end)();v87=(function() return 1;end)();end if (v87~=2) then else v51=(function() return 4 -2 ;end)();break;end end break;end end end if (v51==(0 -0)) then local v88=(function() return 0 + 0 ;end)();while true do if (v88==(1 + 0)) then v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v88=(function() return 1553 -(1126 + 425) ;end)();end if (v88~=2) then else v51=(function() return  #":";end)();break;end if (v88~=(405 -(118 + 287))) then else v52=(function() return {};end)();v53=(function() return {};end)();v88=(function() return 1 + 0 ;end)();end end end end end local function v29(v58,v59,v60) local v61=v58[1122 -(118 + 1003) ];local v62=v58[5 -3 ];local v63=v58[380 -(142 + 235) ];return function(...) local v64=v61;local v65=v62;local v66=v63;local v67=v27;local v68=1;local v69= -1;local v70={};local v71={...};local v72=v12("#",...) -(1 + 0) ;local v73={};local v74={};for v83=977 -(553 + 424) ,v72 do if (v83>=v66) then v70[v83-v66 ]=v71[v83 + (1 -(405 -(255 + 150))) ];else v74[v83]=v71[v83 + 1 + 0 + 0 ];end end local v75=(v72-v66) + 1 + 0 ;local v76;local v77;while true do v76=v64[v68];v77=v76[1 + 0 ];if (v77<=(11 + 13)) then if (v77<=(7 + 4)) then if ((v77<=5) or (2881<604)) then if (v77<=(2 + 0)) then if (v77<=(0 -0)) then local v115=0 -0 ;local v116;while true do if ((v115==0) or (900==3377)) then v116=v76[2];v74[v116]=v74[v116]();break;end end elseif (v77==((8 -6) -1)) then local v137=v76[1 + 1 ];v74[v137](v74[v137 + (4 -3) ]);else v74[v76[755 -(239 + (1659 -1145)) ]]=v76[3]~=(0 + 0) ;end elseif (v77<=(1332 -(797 + 532))) then v74[v76[(1741 -(404 + 1335)) + 0 ]][v76[2 + 1 ]]=v76[9 -5 ];elseif ((4459>591) and (v77>(410 -(183 + 223)))) then v74[v76[1204 -(373 + 829) ]]={};else v74[v76[733 -((579 -103) + 255) ]][v76[3]]=v74[v76[1134 -(369 + 761) ]];end elseif (v77<=8) then if (v77<=(4 + 2)) then v74[v76[2 -0 ]]=v60[v76[5 -2 ]];elseif (v77==((163 + 82) -(64 + 174))) then local v142=0;local v143;while true do if (v142==(0 + 0 + 0)) then v143=v76[2 -0 ];v74[v143](v13(v74,v143 + (337 -(144 + 192)) ,v76[219 -(42 + 174) ]));break;end end else local v144=v76[3 + 0 ];local v145=v74[v144];for v206=v144 + 1 + 0 ,v76[4] do v145=v145   .. v74[v206] ;end v74[v76[2]]=v145;end elseif (v77<=((341 -(10 + 327)) + 5)) then local v121=v76[1506 -(363 + 1141) ];v74[v121]=v74[v121](v13(v74,v121 + (1581 -(1183 + 397)) ,v69));elseif (v77==(30 -20)) then local v147=0 + 0 ;local v148;while true do if (v147==(0 + 0)) then v148=v76[2];v74[v148](v74[v148 + 1 ]);break;end end else v74[v76[1977 -(1913 + 62) ]]=v74[v76[2 + 1 ]][v76[10 -6 ]];end elseif ((3398>=2395) and (v77<=(1950 -(565 + 953 + 415)))) then if (v77<=14) then if ((v77<=((383 -(118 + 220)) -33)) or (2183>=2824)) then local v123=v76[1663 -(1477 + 184) ];v74[v123]=v74[v123]();elseif (v77>(16 -3)) then v74[v76[2]]=v76[3];else local v153=0 + 0 + 0 ;local v154;while true do if (v153==(856 -(564 + 292))) then v154=v76[451 -(108 + 341) ];v74[v154](v13(v74,v154 + (1 -(0 + 0)) ,v69));break;end end end elseif (v77<=(45 -30)) then if ((1936==1936) and (v74[v76[306 -(244 + 60) ]]==v76[4 + (0 -0) ])) then v68=v68 + 1 ;else v68=v76[479 -(41 + 435) ];end elseif ((v77>(1017 -(938 + 63))) or (4832<4313)) then if ((4088>3874) and (v74[v76[2 + (1493 -(711 + 782)) ]]==v76[1129 -(936 + 189) ])) then v68=v68 + 1 ;else v68=v76[1 + 2 ];end else v74[v76[1615 -((3000 -1435) + 48) ]][v76[2 + 1 ]]=v76[1142 -(782 + 356) ];end elseif (v77<=(287 -(176 + 91))) then if (v77<=(46 -28)) then v74[v76[2 -0 ]]=v29(v65[v76[(1564 -(270 + 199)) -(975 + 117) ]],nil,v60);elseif ((4332==4332) and (v77==(1894 -(157 + 1718)))) then local v158=v76[2 + 0 ];local v159=v74[v76[10 -7 ]];v74[v158 + (3 -2) ]=v159;v74[v158]=v159[v76[1022 -(697 + 105 + 216) ]];else v68=v76[7 -4 ];end elseif ((3999>=2900) and (v77<=(1841 -(580 + 1239)))) then if (v77==21) then local v164=0 -0 ;local v165;local v166;local v167;local v168;while true do if (v164==(2 -1)) then v69=(v167 + v165) -(1 + 0) ;v168=0 -0 ;v164=5 -3 ;end if (v164==((3647 -2420) -(322 + 905))) then v165=v76[613 -(602 + 9) ];v166,v167=v67(v74[v165](v13(v74,v165 + 1 ,v76[1192 -(449 + 740) ])));v164=(835 + 38) -(826 + 46) ;end if (v164==(949 -(245 + 702))) then for v237=v165,v69 do v168=v168 + ((1 + 2) -2) ;v74[v237]=v166[v168];end break;end end else v74[v76[1 + 1 ]]=v29(v65[v76[3]],nil,v60);end elseif (v77==23) then for v207=v76[1900 -(260 + 1638) ],v76[3] do v74[v207]=nil;end else v60[v76[443 -(382 + 58) ]]=v74[v76[6 -4 ]];end elseif (v77<=(30 + 6)) then if (v77<=(62 -32)) then if ((v77<=(80 -53)) or (2525>4064)) then if (v77<=((536 + 694) -((2354 -1452) + 303))) then v74[v76[3 -1 ]]=v76[6 -(2 + 1) ];elseif (v77==(3 + 23)) then v74[v76[1692 -(1121 + 569) ]]=v74[v76[217 -(22 + 192) ]];else local v174=0;local v175;while true do if ((4371==4371) and (v174==(683 -((1650 -(645 + 522)) + (1990 -(1010 + 780)))))) then v175=v76[2];v74[v175]=v74[v175](v13(v74,v175 + (1464 -(1404 + 59)) ,v76[8 -5 ]));break;end end end elseif (v77<=(37 -9)) then v74[v76[767 -(468 + 297) ]]={};elseif (v77>(591 -(334 + 228))) then local v176=v76[6 -4 ];v74[v176](v13(v74,v176 + 1 ,v69));else local v177=v76[(4 + 0) -2 ];v74[v177]=v74[v177](v13(v74,v177 + (1 -0) ,v76[(4 -3) + 2 ]));end elseif ((v77<=((788 -519) -(141 + 95))) or (266>4986)) then if ((1991>=925) and (v77<=(31 + (1836 -(1045 + 791))))) then local v129=0 -0 ;local v130;local v131;local v132;local v133;while true do if ((455<2053) and (((0 -0) -0)==v129)) then v130=v76[2];v131,v132=v67(v74[v130](v13(v74,v130 + 1 ,v76[1 + 2 ])));v129=2 -1 ;end if (v129==((1 -0) + 0)) then v69=(v132 + v130) -1 ;v133=0 + 0 ;v129=507 -(351 + 154) ;end if (v129==2) then for v216=v130,v69 do v133=v133 + (1 -0) ;v74[v216]=v131[v133];end break;end end elseif (v77>(19 + 13)) then v68=v76[166 -(92 + 71) ];else v74[v76[1 + 1 ]][v76[3]]=v74[v76[6 -(1576 -(1281 + 293)) ]];end elseif (v77<=34) then v74[v76[767 -((840 -(28 + 238)) + 191) ]]();elseif ((v77>(29 + 6)) or (826==4851)) then v74[v76[4 -2 ]]();else local v182=v76[2 + 0 ];v74[v182]=v74[v182](v13(v74,v182 + (850 -(254 + 595)) ,v69));end elseif (v77<=(168 -(55 + 71))) then if (v77<=(50 -11)) then if (v77<=(1827 -(573 + 1217))) then if (v76[5 -3 ]==v74[v76[1 + 3 ]]) then v68=v68 + (1 -0) ;else v68=v76[6 -3 ];end elseif ((183==183) and (v77>(977 -(714 + 225)))) then do return;end else v74[v76[5 -3 ]]=v74[v76[(1562 -(1381 + 178)) -0 ]];end elseif (v77<=(5 + 35)) then do return;end elseif ((1159<=1788) and (v77>41)) then v74[v76[2 -0 ]]=v60[v76[3]];elseif ((v76[2]==v74[v76[810 -(118 + 688) ]]) or (3507>4318)) then v68=v68 + ((46 + 3) -(25 + 23)) ;else v68=v76[1 + 2 ];end elseif (v77<=(1931 -(927 + 959))) then if ((v77<=((117 + 27) -(44 + 57))) or (3075<=2965)) then v60[v76[3]]=v74[v76[734 -(16 + 716) ]];elseif ((1365<=2011) and (v77>(84 -40))) then local v189=v76[99 -(11 + 86) ];local v190=v74[v76[3]];v74[v189 + (2 -1) ]=v190;v74[v189]=v190[v76[289 -(175 + 110) ]];else for v210=v76[4 -2 ],v76[3] do v74[v210]=nil;end end elseif (v77<=(231 -184)) then if (v77>((6350 -4508) -(503 + 1293))) then v74[v76[5 -3 ]]=v76[3 + 0 ]~=(1061 -(810 + 251)) ;else local v195=0 + 0 ;local v196;while true do if (((0 + 0)==v195) or (2776>3575)) then v196=v76[2 + 0 ];v74[v196](v13(v74,v196 + (534 -(43 + 490)) ,v76[3]));break;end end end elseif (v77==48) then v74[v76[2]]=v74[v76[3]][v76[737 -(711 + 22) ]];else local v199=0 -0 ;local v200;local v201;while true do if ((v199==(1 + 0)) or (2554==4804)) then for v240=v200 + 1 ,v76[863 -(240 + 619) ] do v201=v201   .. v74[v240] ;end v74[v76[(471 -(381 + 89)) + 1 ]]=v201;break;end if ((2577==2577) and (v199==0)) then v200=v76[3];v201=v74[v200];v199=(1 + 0) -0 ;end end end v68=v68 + 1 + 0 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);