--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v91=v2(v0(v30,16));if v19 then local v111=0;local v112;while true do if (v111==1) then return v112;end if (v111==0) then v112=v5(v91,v19);v19=nil;v111=1;end end else return v91;end end end);local function v20(v31,v32,v33) if v33 then local v92=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(1 + 0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v92-(v92%(932 -(857 + 74))) ;else local v93=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v93 + v93))>=v93) and ((878 -(282 + 595)) + 0)) or 0 ;end end local function v21() local v34=0;local v35;while true do if (v34==((2907 -(226 + 1044)) -(1523 + 114))) then v35=v1(v16,v18,v18);v18=v18 + 1 + (0 -0) ;v34=1 -(117 -(32 + 85)) ;end if (v34==(1066 -(68 + 997))) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + 1 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23() local v38=0 -0 ;local v39;local v40;local v41;local v42;while true do if ((1 -0)==v38) then return (v42 * (30800116 -14022900)) + (v41 * (65886 -(87 + 263))) + (v40 * ((321 + 115) -((266 -199) + 113))) + v39 ;end if (v38==0) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (955 -(802 + 150)) + 1 ;v38=2 -1 ;end end end local function v24() local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(1 -0)) then v46=1 + 0 ;v47=(v20(v45,998 -((1687 -(201 + 571)) + 82) ,56 -(1174 -(116 + 1022)) ) * ((2 + 0)^(41 -9))) + v44 ;v43=(4949 -3760) -(1069 + 70 + 48) ;end if (v43==(0 -(0 -0))) then v44=v23();v45=v23();v43=1 -0 ;end if (v43==(1 + 2)) then if (v48==(0 -0)) then if (v47==(0 + 0)) then return v49 * 0 ;else v48=792 -(368 + 423) ;v46=0 -0 ;end elseif (v48==2047) then return ((v47==(18 -(10 + 8))) and (v49 * (((10 -7) -(861 -(814 + 45)))/(442 -(416 + 26))))) or (v49 * NaN) ;end return v8(v49,v48-(3266 -2243) ) * (v46 + (v47/(((2 -1) + 1)^(91 -39)))) ;end if (v43==(440 -(145 + 293))) then v48=v20(v45,21,461 -(44 + 386) );v49=((v20(v45,32)==(1487 -(998 + 488))) and  -(1 + 0)) or (1 + 0) ;v43=3;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(0 + 0)) then return "";end end v51=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;local v52={};for v68=886 -(261 + 624) , #v51 do v52[v68]=v2(v1(v3(v51,v68,v68)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v94,v95,v96,v97,v98,v99,v100,v101,v102) local v103=(function() return 0;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v103~=0) then else local v117=(function() return 1990 -(582 + 1408) ;end)();while true do if ((0 -0)==v117) then v94=(function() return 0 -0 ;end)();v95=(function() return nil;end)();v117=(function() return 1 + 0 ;end)();end if (v117==(652 -(494 + 157))) then v103=(function() return 3 -2 ;end)();break;end end end if (v103==(1 -0)) then local v118=(function() return 0 + 0 ;end)();while true do if ((0 -0)~=v118) then else local v122=(function() return 0;end)();while true do if (v122==(0 + 0)) then while true do if (v94~=0) then else v95=(function() return v96();end)();if (v97(v95, #"}", #"~")~=(0 + 0)) then else local v155=(function() return 780 -(162 + 618) ;end)();local v156=(function() return;end)();local v157=(function() return;end)();local v158=(function() return;end)();while true do if (v155~=(837 -(660 + 176))) then else local v220=(function() return 0 + 0 ;end)();local v221=(function() return;end)();while true do if (v220==0) then v221=(function() return 0;end)();while true do if (v221~=1) then else v155=(function() return 1 + 1 ;end)();break;end if (v221~=0) then else local v241=(function() return 0;end)();while true do if (v241==(1 + 0)) then v221=(function() return 203 -(14 + 188) ;end)();break;end if ((675 -(534 + 141))==v241) then v158=(function() return {v98(),v98(),nil,nil};end)();if (v156==(0 -0)) then local v242=(function() return 0 + 0 ;end)();local v243=(function() return;end)();while true do if ((0 + 0)==v242) then v243=(function() return 1000 -(451 + 549) ;end)();while true do if (v243==(0 + 0)) then v158[ #"asd"]=(function() return v98();end)();v158[ #"asd1"]=(function() return v98();end)();break;end end break;end end elseif (v156== #",") then v158[ #"91("]=(function() return v99();end)();elseif (v156==(2 -0)) then v158[ #"19("]=(function() return v99() -(2^16) ;end)();elseif (v156~= #"xxx") then else local v248=(function() return 0 + 0 ;end)();local v249=(function() return;end)();while true do if (v248~=(0 -0)) then else v249=(function() return 0 -0 ;end)();while true do if ((0 + 0)==v249) then v158[ #"xnx"]=(function() return v99() -((5 -3)^(9 + 7)) ;end)();v158[ #"0313"]=(function() return v98();end)();break;end end break;end end end v241=(function() return 1;end)();end end end end break;end end end if (v155==3) then if (v97(v157, #"19(", #"xxx")== #">") then v158[ #"http"]=(function() return v100[v158[ #"0836"]];end)();end v101[v102]=(function() return v158;end)();break;end if (v155==(2 + 0)) then if (v97(v157, #"}", #"{")~= #"}") then else v158[398 -(115 + 281) ]=(function() return v100[v158[2 + 0 ]];end)();end if (v97(v157,4 -2 ,2)== #",") then v158[ #"xnx"]=(function() return v100[v158[ #"19("]];end)();end v155=(function() return 3;end)();end if ((0 + 0)==v155) then local v223=(function() return 0 -0 ;end)();local v224=(function() return;end)();while true do if (v223==(0 + 0)) then v224=(function() return 0;end)();while true do if (v224==(0 -0)) then v156=(function() return v97(v95,1 + 1 , #"gha");end)();v157=(function() return v97(v95, #".dev",11 -5 );end)();v224=(function() return 1468 -(899 + 568) ;end)();end if (v224==1) then v155=(function() return 868 -(550 + 317) ;end)();break;end end break;end end end end end break;end end return v94,v95,v96,v97,v98,v99,v100,v101,v102;end end end end end end end;end)();local v54=(function() return function(v104,v105,v106) local v107=(function() return 0 + 0 ;end)();local v108=(function() return;end)();while true do if (v107~=0) then else v108=(function() return 0 -0 ;end)();while true do if (0==v108) then v104[v105-#"," ]=(function() return v106();end)();return v104,v105,v106;end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v70= #":",v59 do local v71=(function() return 0 -0 ;end)();local v72=(function() return;end)();local v73=(function() return;end)();local v74=(function() return;end)();while true do if (v71~=(0 -0)) then else v72=(function() return 603 -(268 + 335) ;end)();v73=(function() return nil;end)();v71=(function() return 286 -(134 + 151) ;end)();end if (v71~=1) then else v74=(function() return nil;end)();while true do if (v72~=(290 -(60 + 230))) then else v73=(function() return v21();end)();v74=(function() return nil;end)();v72=(function() return 1666 -(970 + 695) ;end)();end if (v72==(573 -(426 + 146))) then if (v73== #" ") then v74=(function() return v21()~=(0 -0) ;end)();elseif (v73==(1458 -(282 + 1174))) then v74=(function() return v24();end)();elseif (v73~= #"-19") then else v74=(function() return v25();end)();end v60[v70]=(function() return v74;end)();break;end end break;end end end v58[ #"xxx"]=(function() return v21();end)();for v75= #"\\",v23() do FlatIdent_31A5A,Descriptor,v21,v20,v22,v23,v60,v55,v75=(function() return v53(FlatIdent_31A5A,Descriptor,v21,v20,v22,v23,v60,v55,v75);end)();end for v76= #"|",v23() do v56,v76,v28=(function() return v54(v56,v76,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[812 -(569 + 242) ];local v66=v62[2];local v67=v62[8 -5 ];return function(...) local v77=v65;local v78=v66;local v79=v67;local v80=v27;local v81=1 + 0 ;local v82= -(1025 -(706 + 318));local v83={};local v84={...};local v85=v12("#",...) -((2998 -(1668 + 58)) -(945 + 326)) ;local v86={};local v87={};for v109=0 -0 ,v85 do if (v109>=v79) then v83[v109-v79 ]=v84[v109 + 1 + 0 ];else v87[v109]=v84[v109 + (701 -(271 + 429)) ];end end local v88=(v85-v79) + 1 + 0 ;local v89;local v90;while true do local v110=(2126 -(512 + 114)) -(1408 + (239 -147)) ;while true do if (v110==(1086 -(461 + 625))) then v89=v77[v81];v90=v89[1289 -(993 + 295) ];v110=1 + 0 ;end if (v110==(1172 -(418 + 753))) then if (v90<=(9 + (28 -14))) then if ((v90<=(2 + 9)) or (1596==858)) then if (v90<=(2 + 3)) then if ((3220==3220) and (v90<=(1 + 1))) then if (v90<=(529 -(406 + 123))) then v64[v89[1772 -(1749 + 20) ]]=v87[v89[1 + (3 -2) ]];elseif (v90>(1323 -(1249 + 34 + 39))) then local v167=v89[5 -3 ];v87[v167]=v87[v167](v13(v87,v167 + 1 + 0 + 0 ,v89[5 -(2 + 0) ]));else v87[v89[1147 -(466 + 679) ]][v89[(20 -14) -3 ]]=v89[11 -7 ];end elseif ((v90<=(1903 -(106 + 1794))) or (1402>3620)) then if ((2574==2574) and (v87[v89[1 + 1 ]]==v89[2 + 2 ])) then v81=v81 + (2 -1) ;else v81=v89[7 -4 ];end elseif (v90>(118 -(4 + 110))) then v87[v89[2 -0 ]][v89[587 -(57 + 527) ]]=v89[1431 -(41 + 1386) ];else local v174=v89[105 -(17 + 86) ];v87[v174](v13(v87,v174 + 1 + 0 ,v89[10 -7 ]));end elseif ((1798<2757) and (v90<=8)) then if ((v90<=(13 -7)) or (377>2604)) then v87[v89[5 -3 ]]=v89[5 -2 ]~=(166 -(122 + 44)) ;elseif (v90==(243 -(141 + 95))) then v87[v89[(1996 -(109 + 1885)) -0 ]]=v89[9 -6 ]~=0 ;else local v176=v89[2 + 0 ];local v177=v87[v89[(1470 -(1269 + 200)) + 2 ]];v87[v176 + (1 -0) ]=v177;v87[v176]=v177[v89[4]];end elseif ((568<911) and (v90<=(74 -(30 + 35)))) then for v159=v89[2 + 0 ],v89[(2415 -1155) -(1043 + 214) ] do v87[v159]=nil;end elseif (v90>10) then v81=v89[11 -8 ];else v87[v89[(817 -(98 + 717)) -0 ]]=v87[v89[1215 -(323 + 889) ]][v89[10 -6 ]];end elseif (v90<=(597 -(361 + 219))) then if ((3285<4228) and (v90<=(334 -(53 + (1093 -(802 + 24)))))) then if (v90<=12) then v87[v89[(1 -0) + 1 ]]=v87[v89[2 + 1 ]];elseif (v90>(426 -((18 -3) + 398))) then local v184=(146 + 836) -(14 + 4 + 964) ;local v185;while true do if ((0 -0)==v184) then v185=v89[2 + 0 ];v87[v185](v13(v87,v185 + 1 + 0 ,v89[853 -(20 + 830) ]));break;end end else v87[v89[4 -2 ]]={};end elseif ((3916>3328) and (v90<=(12 + 3))) then v64[v89[852 -(254 + 595) ]]=v87[v89[128 -(116 + 10) ]];elseif (v90>(2 + 14)) then local v187=738 -(542 + 196) ;local v188;while true do if ((2500<3839) and (v187==(0 -0))) then v188=v89[1 + 0 + 1 ];v87[v188]=v87[v188]();break;end end elseif (v87[v89[2 + 0 ]]==v89[2 + 2 ]) then v81=v81 + (2 -1) ;else v81=v89[(204 + 738) -(714 + 225) ];end elseif (v90<=((141 -90) -31)) then if ((507==507) and (v90<=(1569 -(1126 + 425)))) then v87[v89[407 -(118 + 287) ]]=v89[3];elseif (v90==(25 -6)) then local v189=0 -0 ;local v190;local v191;while true do if (v189==(1121 -((393 -275) + 1003))) then v190=v89[8 -5 ];v191=v87[v190];v189=378 -(142 + 235) ;end if (v189==(4 -3)) then for v240=v190 + 1 + 0 ,v89[981 -(553 + 424) ] do v191=v191   .. v87[v240] ;end v87[v89[734 -(6 + 10 + 716) ]]=v191;break;end end else local v192=v89[3 -1 ];v87[v192](v13(v87,v192 + 1 + 0 ,v82));end elseif (v90<=(21 + 0)) then local v133=v89[4 -2 ];v87[v133](v13(v87,v133 + (286 -(72 + 103 + 110)) ,v82));elseif (v90==(13 + 9)) then v87[v89[9 -7 ]][v89[2 + 1 ]]=v87[v89[3 + 1 ]];else v87[v89[4 -(2 + 0) ]]={};end elseif ((240<=3165) and (v90<=((797 + 299) -(810 + 118 + 133)))) then if ((834>=805) and (v90<=(80 -51))) then if (v90<=(58 -32)) then if ((v90<=(7 + 17)) or (3812<2316)) then local v134=v89[9 -7 ];local v135=v87[v89[756 -(239 + 514) ]];v87[v134 + (3 -2) ]=v135;v87[v134]=v135[v89[2 + 2 ]];elseif (v90==(1354 -(797 + (1965 -(797 + 636))))) then v87[v89[2]]();else local v196=v89[2 -0 ];v87[v196]=v87[v196](v13(v87,v196 + 1 + 0 ,v82));end elseif (v90<=27) then v87[v89[1746 -(1344 + 400) ]]=v87[v89[3]][v89[3 + 1 ]];elseif (v90==(10 + 18)) then v87[v89[2]]=v29(v78[v89[3 + 0 ]],nil,v64);else do return;end end elseif (v90<=(74 -42)) then if (v90<=(1232 -(373 + 829))) then local v141=v89[(3558 -2825) -((2095 -(1427 + 192)) + 255) ];local v142,v143=v80(v87[v141](v13(v87,v141 + (1131 -(369 + 761)) ,v89[2 + 1 ])));v82=(v143 + v141) -(1 + (0 -0)) ;local v144=(0 + 0) -0 ;for v161=v141,v82 do local v162=0 -0 ;while true do if ((v162==(238 -(30 + 34 + 174))) or (2652<=1533)) then v144=v144 + 1 + 0 ;v87[v161]=v142[v144];break;end end end elseif ((v90>((371 -(192 + 134)) -14)) or (3598<1460)) then local v199=(1612 -(316 + 960)) -(81 + 63 + 192) ;local v200;while true do if (v199==(216 -(42 + 174))) then v200=v89[2 + 0 ];v87[v200](v87[v200 + 1 ]);break;end end else v87[v89[2 + 0 ]]=v64[v89[2 + 1 + 0 ]];end elseif ((v90<=(1537 -(363 + 1141))) or (4116<1192)) then local v145=v89[1582 -(1183 + 367 + 30) ];local v146,v147=v80(v87[v145](v13(v87,v145 + (2 -1) ,v89[3])));v82=(v147 + v145) -(1 + 0) ;local v148=0 -0 ;for v163=v145,v82 do local v164=0 + 0 ;while true do if (v164==(0 + 0)) then v148=v148 + (1976 -(1913 + 62)) ;v87[v163]=v146[v148];break;end end end elseif (v90==(100 -(252 -186))) then v87[v89[2]]=v64[v89[3 + 0 ]];else v87[v89[2 + 0 ]][v89[(558 -(83 + 468)) -4 ]]=v87[v89[4]];end elseif ((v90<=(1974 -(565 + 1368))) or (3377<=903)) then if (v90<=(142 -104)) then if ((3976>=439) and (v90<=36)) then for v165=v89[1663 -((3283 -(1202 + 604)) + 184) ],v89[3 -0 ] do v87[v165]=nil;end elseif (v90>(35 + 2)) then v87[v89[858 -(564 + 292) ]]=v89[4 -1 ];else local v209=v89[8 -5 ];local v210=v87[v209];for v217=v209 + (305 -(244 + 60)) ,v89[5 -1 ] do v210=v210   .. v87[v217] ;end v87[v89[2 + (0 -0) ]]=v210;end elseif (v90<=(515 -(41 + 435))) then local v149=(1665 -664) -(938 + 63) ;local v150;while true do if (v149==(0 + (0 -0))) then v150=v89[(1886 -(45 + 280)) -(1333 + 48 + 178) ];v87[v150]=v87[v150](v13(v87,v150 + ((984 + 142) -(936 + 189)) ,v89[1 + 2 ]));break;end end elseif (v90>(33 + 3 + 4)) then v87[v89[1 + 1 ]]=v87[v89[(895 + 721) -(1565 + 48) ]];else local v214=v89[2 + 0 ];v87[v214](v87[v214 + (471 -(381 + 89)) ]);end elseif (v90<=(1182 -(782 + 356))) then if (v90<=(29 + 13)) then local v151=v89[(48 + 221) -(176 + 91) ];v87[v151]=v87[v151](v13(v87,v151 + (1157 -(1074 + 82)) ,v82));elseif (v90==(111 -68)) then v81=v89[4 -1 ];else v87[v89[1094 -(975 + 117) ]]();end elseif (v90<=(1500 -(990 + 465))) then local v153=v89[1877 -(157 + 1718) ];v87[v153]=v87[v153]();elseif (v90==(21 + 25)) then do return;end else v87[v89[2 + 0 ]]=v29(v78[v89[3]],nil,v64);end v81=v81 + (3 -2) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);