--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v96=0;local v97;while true do if (v96==0) then v97=v5(v81,v19);v19=nil;v96=1;end if (v96==1) then return v97;end end else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-((879 -(282 + 595)) -1))))%((3 -(1638 -(1523 + 114)))^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v82-(v82%(569 -(367 + 201))) ;else local v83=(929 -(214 + 713))^(v32-1) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 );v18=v18 + (1069 -(68 + 997)) ;return (v40 * (16778486 -(226 + 1044))) + (v39 * (285370 -(215440 + 4394))) + (v38 * (373 -(32 + 85))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 + 0 ;local v44=(v20(v42,958 -(892 + 65) ,(1512 -(998 + 488)) -6 ) * ((1189 -(1069 + 118))^(75 -43))) + v41 ;local v45=v20(v42,38 -(6 + 11) ,(46 + 10) -25 );local v46=((v20(v42,(1154 -(201 + 571)) -(87 + 263) )==(1 + 0)) and  -((1319 -(116 + 1022)) -(67 + 113))) or (1 + 0) ;if (v45==(0 -0)) then if (v44==(18 -(10 + 8))) then return v46 * (0 + 0) ;else v45=1;v43=0 -(0 -0) ;end elseif (v45==2047) then return ((v44==((559 + 393) -(802 + 150))) and (v46 * ((2 -1)/((0 -0) -0)))) or (v46 * NaN) ;end return v8(v46,v45-(745 + 278) ) * (v43 + (v44/((999 -(915 + (291 -209)))^(482 -(44 + 386))))) ;end local function v25(v47) local v48=(339 + 520) -(814 + 45) ;local v49;local v50;while true do if (v48==(7 -4)) then return v6(v50);end if (v48==(1 + 0)) then v49=v3(v16,v18,(v18 + v47) -(1 + 0) );v18=v18 + v47 ;v48=(3053 -2166) -(261 + (2371 -(760 + 987))) ;end if (v48==((1916 -(1789 + 124)) -1)) then v50={};for v87=1081 -(1020 + 60) , #v49 do v50[v87]=v2(v1(v3(v49,v87,v87)));end v48=1426 -(630 + 793) ;end if (v48==(0 -0)) then v49=nil;if  not v47 then v47=v23();if (v47==0) then return "";end end v48=4 -3 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0 -0 ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v65=(function() return 0 + 0 ;end)();while true do if (v65~=0) then else local v89=(function() return 0 -0 ;end)();while true do if (v89~=(1468 -(899 + 568))) then else v65=(function() return 2 -1 ;end)();break;end if ((0 -0)~=v89) then else if (v51==3) then for v104= #" ",v23() do local v105=(function() return v21();end)();if (v20(v105, #"]", #"}")~=(603 -(268 + 335))) then else local v112=(function() return 0 + 0 ;end)();local v113=(function() return;end)();local v114=(function() return;end)();local v115=(function() return;end)();while true do if (v112==(2 + 1)) then if (v20(v114, #"nil", #"91(")~= #"~") then else v115[ #"0836"]=(function() return v58[v115[ #".dev"]];end)();end v53[v104]=(function() return v115;end)();break;end if (v112~=(398 -(115 + 281))) then else if (v20(v114, #",", #":")== #"}") then v115[2]=(function() return v58[v115[4 -2 ]];end)();end if (v20(v114,2 + 0 ,4 -2 )~= #">") then else v115[ #"asd"]=(function() return v58[v115[ #"xxx"]];end)();end v112=(function() return 293 -(60 + 230) ;end)();end if (v112~=1) then else v115=(function() return {v22(),v22(),nil,nil};end)();if (v113==(0 -0)) then local v210=(function() return 0;end)();local v211=(function() return;end)();while true do if (v210~=(867 -(550 + 317))) then else v211=(function() return 0;end)();while true do if (v211~=(0 -0)) then else v115[ #"gha"]=(function() return v22();end)();v115[ #"http"]=(function() return v22();end)();break;end end break;end end elseif (v113== #"<") then v115[ #"nil"]=(function() return v23();end)();elseif (v113==(2 -0)) then v115[ #"19("]=(function() return v23() -((5 -3)^(827 -(569 + 242))) ;end)();elseif (v113== #"91(") then local v237=(function() return 0 -0 ;end)();local v238=(function() return;end)();while true do if (v237==(285 -(134 + 151))) then v238=(function() return 1665 -(970 + 695) ;end)();while true do if (v238~=0) then else v115[ #"19("]=(function() return v23() -((1026 -(706 + 318))^(30 -14)) ;end)();v115[ #"0836"]=(function() return v22();end)();break;end end break;end end end v112=(function() return 2;end)();end if (v112==(1271 -(945 + 326))) then local v195=(function() return 1990 -(582 + 1408) ;end)();while true do if (v195==(0 -0)) then v113=(function() return v20(v105,2, #"nil");end)();v114=(function() return v20(v105, #"asd1",6);end)();v195=(function() return 1 -0 ;end)();end if (v195~=(3 -2)) then else v112=(function() return 1;end)();break;end end end end end end for v106= #"~",v23() do v54,v106,v28=(function() return v52(v54,v106,v28);end)();end return v56;end if (v51==1) then local v103=(function() return 1824 -(1195 + 629) ;end)();while true do if (v103~=(0 + 0)) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v103=(function() return 242 -(187 + 54) ;end)();end if (v103~=(1087 -(461 + 625))) then else v57=(function() return v23();end)();v51=(function() return 2;end)();break;end end end v89=(function() return 1;end)();end end end if ((1289 -(993 + 295))==v65) then if (v51~=(782 -(162 + 618))) then else v58=(function() return {};end)();for v98= #"\\",v57 do local v99=(function() return 0;end)();local v100=(function() return;end)();local v101=(function() return;end)();local v102=(function() return;end)();while true do if (v99==0) then v100=(function() return 0;end)();v101=(function() return nil;end)();v99=(function() return 1172 -(418 + 753) ;end)();end if (v99~=(1 + 0)) then else v102=(function() return nil;end)();while true do if (v100~=(0 + 0)) then else local v139=(function() return 0 + 0 ;end)();while true do if (v139~=(1 + 0)) then else v100=(function() return 1 -0 ;end)();break;end if (v139~=(0 -0)) then else local v203=(function() return 0;end)();while true do if (v203==(1 + 0)) then v139=(function() return 1637 -(1373 + 263) ;end)();break;end if ((529 -(406 + 123))==v203) then v101=(function() return v21();end)();v102=(function() return nil;end)();v203=(function() return 1001 -(451 + 549) ;end)();end end end end end if ((1 + 0)==v100) then if (v101== #"|") then v102=(function() return v21()~=(0 -0) ;end)();elseif (v101==(2 -0)) then v102=(function() return v24();end)();elseif (v101== #"91(") then v102=(function() return v25();end)();end v58[v98]=(function() return v102;end)();break;end end break;end end end v56[ #"xnx"]=(function() return v21();end)();v51=(function() return 1387 -(746 + 638) ;end)();end if (v51~=(0 + 0)) then else local v95=(function() return 0;end)();while true do if (v95==(1 -0)) then v54=(function() return {};end)();v51=(function() return 2 -1 ;end)();break;end if (v95~=0) then else v52=(function() return function(v107,v108,v109) local v110=(function() return 341 -(218 + 123) ;end)();local v111=(function() return;end)();while true do if ((1581 -(1535 + 46))==v110) then v111=(function() return 0;end)();while true do if (v111~=(0 + 0)) then else v107[v108-#":" ]=(function() return v109();end)();return v107,v108,v109;end end break;end end end;end)();v53=(function() return {};end)();v95=(function() return 1 + 0 ;end)();end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[2 -1 ];local v63=v59[(168 -(92 + 71)) -3 ];local v64=v59[117 -(4 + 110) ];return function(...) local v66=v62;local v67=v63;local v68=v64;local v69=v27;local v70=585 -(57 + 527) ;local v71= -(1428 -(41 + 685 + 701));local v72={};local v73={...};local v74=v12("#",...) -(104 -(17 + 86)) ;local v75={};local v76={};for v84=0 + 0 ,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + (1 -0) ];else v76[v84]=v73[v84 + (2 -1) ];end end local v77=(v74-v68) + (167 -((204 -82) + 44)) ;local v78;local v79;while true do v78=v66[v70];v79=v78[1 -0 ];if ((1717<2147) and (v79<=(76 -53))) then if (v79<=(9 + 2)) then if (v79<=(1 + 4)) then if (v79<=(3 -1)) then if ((v79<=(65 -(30 + 35))) or (3927>4773)) then if (v76[v78[2 + 0 ]]==v78[1261 -(1043 + 214) ]) then v70=v70 + (3 -(767 -(574 + 191))) ;else v70=v78[3 + 0 ];end elseif ((1616>=788) and (v79>(1213 -(323 + 889)))) then v76[v78[5 -3 ]]=v78[583 -(361 + 219) ]~=(320 -((132 -79) + 267)) ;else v76[v78[1 + 1 ]]=v76[v78[(213 + 203) -(15 + (1247 -(254 + 595))) ]][v78[986 -(18 + 964) ]];end elseif (v79<=(11 -8)) then v76[v78[2 + 0 ]][v78[2 + 1 ]]=v78[4];elseif ((1854<=3379) and (v79==((980 -(55 + 71)) -(20 + 830)))) then for v196=v78[2],v78[(3 -0) + 0 ] do v76[v196]=nil;end else v76[v78[128 -(116 + 10) ]]=v76[v78[1 + 2 ]];end elseif (v79<=(1798 -(573 + 1217))) then if (v79<=(744 -(542 + 196))) then v76[v78[3 -(2 -1) ]]();elseif (v79>7) then v76[v78[1 + 0 + 1 ]][v78[2 + (1 -0) ]]=v76[v78[2 + 2 ]];else local v149=0 -0 ;local v150;while true do if (v149==(0 -0)) then v150=v78[(2492 -(714 + 225)) -(1126 + 425) ];v76[v150](v76[v150 + 1 ]);break;end end end elseif (v79<=(414 -(118 + 287))) then local v118=v78[7 -5 ];v76[v118](v13(v76,v118 + (1122 -(118 + 1003)) ,v78[8 -(14 -9) ]));elseif ((4549==4549) and (v79==(387 -(142 + 235)))) then if (v76[v78[2]]==v78[4]) then v70=v70 + (4 -(3 -0)) ;else v70=v78[3];end elseif ((v78[2]==v76[v78[4]]) or (3022>=3024)) then v70=v70 + 1 + 0 + 0 ;else v70=v78[980 -((799 -246) + 424) ];end elseif ((4820>2198) and (v79<=(32 -15))) then if (v79<=(820 -(118 + 688))) then if ((v79<=(60 -(25 + 23))) or (1061>=4891)) then local v119=v78[2 + 0 ];v76[v119]=v76[v119](v13(v76,v119 + 1 ,v71));elseif (v79>13) then local v151=0 + 0 + 0 ;local v152;local v153;local v154;local v155;while true do if ((1364<=4473) and (v151==2)) then for v226=v152,v71 do v155=v155 + 1 ;v76[v226]=v153[v155];end break;end if ((1 + 0)==v151) then v71=(v154 + v152) -(1 + 0) ;v155=0;v151=2 + 0 ;end if (v151==(0 -0)) then v152=v78[5 -3 ];v153,v154=v69(v76[v152](v13(v76,v152 + (2 -1) ,v78[1 + (1888 -(927 + 959)) ])));v151=4 -3 ;end end else local v156=753 -(239 + 514) ;local v157;while true do if ((v156==((0 -0) + 0)) or (3595<=3)) then v157=v78[(2063 -(16 + 716)) -(797 + 532) ];v76[v157]=v76[v157](v13(v76,v157 + 1 + 0 ,v78[2 + 1 ]));break;end end end elseif (v79<=(34 -19)) then local v121=v78[1204 -(373 + 829) ];v76[v121](v13(v76,v121 + (732 -(476 + 255)) ,v71));elseif ((v79==(1146 -(369 + 761))) or (4672==3852)) then v76[v78[2]]=v78[2 + 1 ];else local v160=0 -0 ;local v161;while true do if (v160==(0 -0)) then v161=v78[240 -(64 + 174) ];v76[v161]=v76[v161](v13(v76,v161 + 1 + 0 ,v78[3 -0 ]));break;end end end elseif ((1559==1559) and (v79<=(356 -(144 + 192)))) then if (v79<=18) then v76[v78[218 -(42 + (335 -161)) ]]=v61[v78[3 + 0 ]];elseif (v79==(16 + (100 -(11 + 86)))) then do return;end else local v162=v78[1 + 1 ];local v163=v76[v78[1507 -(363 + 1141) ]];v76[v162 + (1581 -(1183 + 397)) ]=v163;v76[v162]=v163[v78[11 -7 ]];end elseif (v79<=(16 + 5)) then v76[v78[2 + 0 ]]=v76[v78[1978 -(1913 + 62) ]];elseif (v79>(14 + 8)) then do return;end else for v198=v78[(12 -7) -3 ],v78[1936 -(565 + 1368) ] do v76[v198]=nil;end end elseif (v79<=35) then if ((v79<=(108 -79)) or (1752<=788)) then if ((v79<=26) or (3907==177)) then if ((3470>555) and (v79<=(1685 -(1477 + 184)))) then v76[v78[2 -0 ]]={};elseif (v79==(24 + 1)) then local v167=856 -(564 + (577 -(175 + 110))) ;local v168;while true do if ((v167==(0 -0)) or (972==645)) then v168=v78[5 -3 ];v76[v168](v13(v76,v168 + (305 -(244 + 60)) ,v71));break;end end else v76[v78[2 + 0 ]][v78[479 -((103 -62) + 435) ]]=v76[v78[(4956 -3951) -(938 + 63) ]];end elseif (v79<=27) then local v127=v78[2 + 0 ];v76[v127]=v76[v127]();elseif (v79>(1153 -(936 + 189))) then local v171=v78[1 + (1797 -(503 + 1293)) ];v76[v171]=v76[v171](v13(v76,v171 + ((4507 -2893) -(1565 + 48)) ,v71));else v76[v78[2 + 0 + 0 ]][v78[1141 -((1843 -(810 + 251)) + 356) ]]=v78[271 -(176 + 91) ];end elseif ((3182>=2115) and (v79<=32)) then if (v79<=30) then v76[v78[4 -2 ]]=v78[3];elseif ((3893<4429) and (v79>((32 + 13) -14))) then if (v78[2]==v76[v78[2 + 2 ]]) then v70=v70 + 1 ;else v70=v78[3];end else local v175=0;local v176;local v177;local v178;local v179;while true do if (v175==1) then v71=(v178 + v176) -(1093 -(975 + 117)) ;v179=1875 -(157 + 1718) ;v175=2 + 0 ;end if (v175==(2 + 0)) then for v229=v176,v71 do local v230=0 -(533 -(43 + 490)) ;while true do if ((v230==0) or (2867<1905)) then v179=v179 + (3 -2) ;v76[v229]=v177[v179];break;end end end break;end if (v175==((1751 -(711 + 22)) -(697 + (1241 -920)))) then v176=v78[861 -(240 + 619) ];v177,v178=v69(v76[v176](v13(v76,v176 + (2 -1) ,v78[5 -(1 + 1) ])));v175=2 -1 ;end end end elseif (v79<=33) then v70=v78[3];elseif (v79>(14 + (31 -11))) then v76[v78[3 -1 ]]=v78[7 -4 ]~=(1227 -(322 + 60 + 845)) ;else local v181=1744 -(1344 + 400) ;local v182;local v183;while true do if (v181==(611 -(602 + 9))) then v182=v78[1191 -(449 + (1145 -(255 + 150))) ];v183=v76[v78[3]];v181=873 -(826 + 46) ;end if (v181==(948 -(245 + 702))) then v76[v182 + (3 -2) ]=v183;v76[v182]=v183[v78[2 + 2 + 0 ]];break;end end end elseif ((v79<=(1939 -(260 + 877 + 761))) or (1796>=4051)) then if (v79<=38) then if ((1619<=3756) and (v79<=(476 -(382 + 58)))) then v61[v78[9 -6 ]]=v76[v78[2 + 0 ]];elseif (v79>(76 -39)) then v76[v78[5 -3 ]]=v61[v78[1208 -((3853 -2951) + 303) ]];else v70=v78[3];end elseif (v79<=(85 -46)) then v76[v78[4 -(6 -4) ]]=v29(v67[v78[(1740 -(404 + 1335)) + (408 -(183 + 223)) ]],nil,v61);elseif ((604==604) and (v79==((2105 -375) -(1121 + 569)))) then v76[v78[216 -(22 + 192) ]]=v76[v78[686 -(483 + 200) ]][v78[1467 -(1404 + 59) ]];else v76[v78[5 -3 ]]();end elseif ((v79<=(58 -14)) or (4484==900)) then if ((v79<=(807 -(468 + 297))) or (4459<=1113)) then local v135=0;local v136;while true do if (0==v135) then v136=v78[2];v76[v136](v13(v76,v136 + (563 -(334 + 228)) ,v78[10 -7 ]));break;end end elseif (v79==(99 -56)) then v76[v78[2 -0 ]]={};else local v190=v78[1 + 1 ];v76[v190](v76[v190 + (237 -(141 + 63 + 32)) ]);end elseif (v79<=(45 + 0)) then local v137=(0 + 0) -0 ;local v138;while true do if ((3632>3398) and (v137==(0 -0))) then v138=v78[1 + 1 ];v76[v138]=v76[v138]();break;end end elseif (v79==(125 -79)) then v61[v78[3 + 0 ]]=v76[v78[(339 -(10 + 327)) + 0 ]];else v76[v78[(2 + 0) -0 ]]=v29(v67[v78[2 + 1 ]],nil,v61);end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);